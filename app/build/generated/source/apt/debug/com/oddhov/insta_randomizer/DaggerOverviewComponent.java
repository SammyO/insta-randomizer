// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.oddhov.insta_randomizer;

import com.oddhov.insta_randomizer.presenters.OverviewPresenterImpl;
import com.oddhov.insta_randomizer.views.OverviewActivity;

import dagger.MembersInjector;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaggerOverviewComponent implements OverviewComponent {
  private Provider<OverviewContract.View> providesOverviewContractViewProvider;

  private Provider<OverviewPresenterImpl> overviewPresenterProvider;

  private MembersInjector<OverviewActivity> overviewActivityMembersInjector;

  private DaggerOverviewComponent(Builder builder) {
    assert builder != null;
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {

    this.providesOverviewContractViewProvider =
        OverviewModule_ProvidesOverviewContractViewFactory.create(builder.overviewModule);

    this.overviewPresenterProvider =
        OverviewPresenter_Factory.create(providesOverviewContractViewProvider);

    this.overviewActivityMembersInjector =
        OverviewActivity_MembersInjector.create(overviewPresenterProvider);
  }

  @Override
  public void inject(OverviewActivity overviewActivity) {
    overviewActivityMembersInjector.injectMembers(overviewActivity);
  }

  public static final class Builder {
    private OverviewModule overviewModule;

    private Builder() {}

    public OverviewComponent build() {
      if (overviewModule == null) {
        throw new IllegalStateException(OverviewModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerOverviewComponent(this);
    }

    public Builder overviewModule(OverviewModule overviewModule) {
      this.overviewModule = Preconditions.checkNotNull(overviewModule);
      return this;
    }
  }
}
